apply plugin: 'maven-publish'

// TODO как это вообще переписать на .kts то
// TODO https://proandroiddev.com/using-kotlin-dsl-to-publish-an-android-library-to-github-packages-2a6a2140068e

def LIB_GROUP_ID = 'io.github.japskiddin'
def LIB_ARTIFACT_ID = 'debuglogger'
def LIB_VERSION = '1.0.5'

task sourceJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier "sources"
}

publishing {
  repositories {
    maven {
      Properties properties = new Properties()
      properties.load(project.rootProject.file('local.properties').newDataInputStream())

      name = "GithubPackages"
      url = uri("https://maven.pkg.github.com/japskiddin/DebugLogger")
      credentials {
        username = properties.getProperty("GITHUB_USER")
        password = properties.getProperty("GITHUB_PERSONAL_ACCESS_TOKEN")
      }
    }
    maven {
      name = 'CustomMavenRepo'
      url = "file://${buildDir}/repo"
    }
  }
  publications {
    debuglogger(MavenPublication) {
      groupId LIB_GROUP_ID
      artifactId LIB_ARTIFACT_ID
      version LIB_VERSION
      artifact("$buildDir/outputs/aar/debuglogger-release.aar")
      artifact(sourceJar)

      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.api.allDependencies.each {
          def dependencyNode = dependenciesNode.appendNode('dependency')
          dependencyNode.appendNode('groupId', it.group)
          dependencyNode.appendNode('artifactId', it.name)
          dependencyNode.appendNode('version', it.version)
        }
      }
    }
  }
}